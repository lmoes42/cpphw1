Exercise 3

1 Q: Is int main() {} a valid C++ program?
  A: This is valid, although it is good practice to write
  int main(argc, char *argv[])
  {}

2 Q: Is int main(int argc, char *argv[], char *envp[]) {}
a valid C++ program?
  A: This is valid, it compiles and nothing here is against good
  practice.

3 Q: is the following a valid C++ program?
int main(int argc, char *argv[])
{
    return;
}

A:
'return' expects a value to follow it, therefore this
expression returns an error

4 Q: is sizeof('c') == 1 a valid C++ expression? Is it true?

 A: Debatable, this is a function from C, and it's generally
encouraged to avoid using this functions, although I would know
no alternative. It is true, as indeed the size of 'c' is 1.

5 Q: In main(int argc, char *argv[]) it is true that argv[argc] == 0.
  A: This is not true since argc provides the number of
arguments (including the program name) and argv is the
array of arguments where counting starts at 0.
argv[argc-1] gives the name of the executable and
argv[argc] segfaults.

6 Q: To immediately end a program from deep inside its code exit(0) should be
used.
  A: This is not good practice since programs should be well
structured, have one beginning and one end. Having an exit
deep inside implies the code is not easily readable.
Moreover exit(0) may leave the computer in a volatile state.

7 Q: When defining an enum called Name start with enum Name, instead of using
typedef enum Name.
  A: Yes, the latter is unnecessary and difficulty readability.

8 Q:  When writing argv[2][3] the resulting code evaluates index [2] before
index [3].
  A: Yes, the resulting code evaluates index [2] first,
followed by index [3]
